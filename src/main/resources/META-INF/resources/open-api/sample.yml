openapi: 3.0.0
x-json-schema-faker:
  protocol: https
info:
  x-audience: public
  title: Sample API
  version: "1.0.0"
  description: Sample to show openapi-generator bug
  termsOfService: https://github.com/rubensa/openapi-generator-bug3
  contact:
    name: Ruben Suarez Alvarez
    url: https://rubensa.eu.org
tags:
  - name: sample
    description: Sample Operations
security:
  - {} # Optional security (see: https://github.com/OAI/OpenAPI-Specification/issues/14#issuecomment-297457320)
  - bearer: []
servers:
  - description: local
    url: http://openapi-generator-bug3.local.computer:8080/

paths:
  "/sample":
    post:
      operationId: setSample
      tags:
        - sample
      description: Create a new Sample with the values provided in the request body
      parameters:
        - name: prefer
          in: header
          description: Preferred response (only for prism)
          required: false
          style: simple
          explode: true
          schema:
            type: string
            enum:
              - dynamic=true
              - code=400
              - code=403
              - code=404
              - code=500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                related:
                  type: array
                  items:
                    type: integer
                    format: int64
                  minItems: 1
              required:
                - title
              additionalProperties: false
            examples:
              newSample:
                $ref: samples/new-sample.yml
      responses:
        "201":
          description: The ID of the new Sample
          content:
            application/json:
              schema:
                type: integer
                format: int64
                minimum: 0
                x-faker: number
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/serverError"
components:
  ################################# Schemas
  schemas:
    problem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: A URI that identifies the problem type
          default: about:blank # kept for backwards-compatibility, type will be mandatory in problem-v2
        title:
          type: string
          description: A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri-reference
          description: A URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
  ################################# Responses
  responses:
    badRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
          example:
            $ref: samples/problem-400-bad-request.yml
    unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
          example:
            $ref: samples/problem-401-unauthorized.yml
    forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
          example:
            $ref: samples/problem-403-forbidden.yml
    notFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
          example:
            $ref: samples/problem-404-not-found.yml
    serverError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problem"
          example:
            $ref: samples/problem-500-internal-server-error.yml
  ################################# Security
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
